apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

version = rootProject.ext.releaseVersion

android {
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 33
        versionCode 1
        versionName project.version

        // A map of name to isSupporting
        def features = [
                UPDATE_MESSAGE_OF_BUILD: true,
                SERIALIZED_EXCEPTION: true,
                LOGCAT_BUNDLE: true,
                STREAMED_LOGCAT: true,
                DEVICE_CAPTURE: true,
        ]

        if (!(features instanceof LinkedHashMap)) {
            throw new IllegalAccessException("The key order may not be kept")
        }

        int flags = 0

        features.keySet().eachWithIndex { String key, int i ->
            buildConfigField("int", key, "1 << $i")

            if (features[key]) {
                flags |= 1 << i
            }
        }

        manifestPlaceholders += [
                featureFlags: flags,
                sdkVersion: "4",
                sdkArtifactVersion: project.version,
        ]
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            jvmArgs "-Xmx1g"
        }
    }

    buildFeatures {
        buildConfig = true
    }
}

dependencies {
    testImplementation 'androidx.test:runner:1.5.2'
    testImplementation 'androidx.test.ext:junit:1.1.5'
    testImplementation 'org.robolectric:robolectric:4.10.3'

    testImplementation 'androidx.test:rules:1.5.0'
    testImplementation 'com.google.truth:truth:1.0'
}

android.libraryVariants.configureEach { variant ->
    tasks.register("verifyBytecodeVersion${variant.name.capitalize()}", Exec).configure {
        dependsOn "assemble${variant.name.capitalize()}"

        commandLine rootProject.file("scripts/verify-bytecode-version").path, "--aar", project.file("build/outputs/aar/${project.name}-${variant.name}.aar"), "--java", project.android.compileOptions.targetCompatibility.toString()
    }
}